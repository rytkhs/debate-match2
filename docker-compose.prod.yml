services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: debate_match_app
    restart: unless-stopped
    environment:
      - "APP_ENV=production"
      - "APP_URL=https://debate-match.com"
      - "DB_CONNECTION=mysql"
      - "DB_HOST=${DB_HOST}"
      - "DB_PORT=${DB_PORT}"
      - "DB_DATABASE=${DB_DATABASE}"
      - "DB_USERNAME=${DB_USERNAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "PUSHER_APP_ID=${PUSHER_APP_ID}"
      - "PUSHER_APP_KEY=${PUSHER_APP_KEY}"
      - "PUSHER_APP_SECRET=${PUSHER_APP_SECRET}"
      - "PUSHER_HOST=${PUSHER_HOST}"
      - "PUSHER_PORT=${PUSHER_PORT}"
      - "PUSHER_SCHEME=${PUSHER_SCHEME}"
      - "PUSHER_APP_CLUSTER=${PUSHER_APP_CLUSTER}"
      - "OPENROUTER_API_KEY=${OPENROUTER_API_KEY}"
      - "SESSION_DRIVER=${SESSION_DRIVER:-file}"
      - "CACHE_DRIVER=${CACHE_DRIVER:-file}"
      - "QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}"
      - "SENTRY_LARAVEL_DSN=${SENTRY_LARAVEL_DSN}"
      - "SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE:-1.0}"
    volumes:
      - ./.env:/var/www/html/.env:ro
      - public-data:/var/www/html/public
    networks:
      - sail
    depends_on:
      - redis

  nginx:
    image: nginx:1.25-alpine
    container_name: debate_match_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /home/ec2-user/app/data/certbot/www:/var/www/certbot
      - public-data:/var/www/html/public:ro

    networks:
      - sail
    depends_on:
      - app

  worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: debate_match_worker
    restart: unless-stopped
    command: php artisan queue:work redis --sleep=3 --tries=3 --timeout=300 --max-jobs=500 --max-time=1800
    environment:
      - "APP_ENV=production"
      - "DB_CONNECTION=mysql"
      - "DB_HOST=${DB_HOST}"
      - "DB_PORT=${DB_PORT}"
      - "DB_DATABASE=${DB_DATABASE}"
      - "DB_USERNAME=${DB_USERNAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
      - "PUSHER_APP_ID=${PUSHER_APP_ID}"
      - "QUEUE_CONNECTION=redis"
    volumes:
      - ./.env:/var/www/html/.env:ro
    networks:
      - sail
    depends_on:
      - app
      - redis

  redis:
    image: redis:7-alpine
    container_name: debate_match_redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - sail
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  sail:
    driver: bridge

volumes:
  redis-data:
    driver: local
  public-data:
    driver: local
